#! /usr/bin/env bash

source "$XDG_HOME_BIN"/utils/base
source "$XDG_HOME_BIN"/utils/manager

declare -a PACKAGES_TO_INSTALL
declare -a PACKAGES_VALID_TO_INSTALL

build_array_valid() {

    for package in $@
    do
        
        if exists_in_repo "$package";
        then

            PACKAGES_TO_INSTALL+=( "$package" )

        else
            
            error "O pacote $package não existe."
            
        fi

    done
    

}

build_array_with_not_installed() {

    for valid_package in ${PACKAGES_TO_INSTALL[@]}
    do
        
        if is_not_installed "$valid_package"; 
        then

            PACKAGES_VALID_TO_INSTALL+=( "$valid_package" )
            info "O pacote $valid_package foi encontrado."
            
        fi

    done

}

install() {

    if test ${#PACKAGES_VALID_TO_INSTALL[@]} -gt 0 
    then

        warn "Iniciando a instalação dos pacotes"
        ask_for_sudo "Informe sua senha para iniciar a instalação: "
        sudo nala install -y "${PACKAGES_VALID_TO_INSTALL[@]}"
        
    fi

}

valid_install() {

    for installed_package in ${PACKAGES_VALID_TO_INSTALL[@]}
    do
        
        add_package "$installed_package"

    done

}

help() {

    usage "Utilitário para instalação e sincronia de pacotes do repositório. Exemplo de uso: install <pacote>"
    exit

}

ARGS=$(getopt -o "h" -l "help" -n "install" -- "$@") # Adicione aqui o parametro que deseja adicionar ao binário. "<param>:" indica que ele pode ter um valor 

eval set -- "$ARGS"
unset ARGS

while true; 
do
    
    case "$1" in
        -h | --help) 
            shift; # O shift é importante! Ele retira o parâmetro validado para que o prṍximo seja lido. No caso do help, deve ser usado antes, mas nos demais casos vc deve colocar após o processamento
            help 0 
        ;;
        --)
            shift;
            break;
        ;;
    esac

done

build_array_valid $@
build_array_with_not_installed
install
valid_install
dsync -m "Pacotes instalados: $(array_to_str ${PACKAGES_VALID_TO_INSTALL[@]})"



