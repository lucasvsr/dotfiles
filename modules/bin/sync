#! /usr/bin/env bash

source "$XDG_HOME_BIN"/utils/base
source "$XDG_HOME_BIN"/utils/manager

help() {

   usage "Utilitário para sincronização do repositório"
   exit "$1"

}

sync_flatpaks() {

    local BLOCK_LIST

    while read -r item
    do

        if [ -z "$BLOCK_LIST" ] # Se a variável estiver vazia
        then
            
            BLOCK_LIST=$item

        else # Do contrário
            
            BLOCK_LIST="$BLOCK_LIST|$item"

        fi

    done < "$DOTFILES"/modules/flatpak/block

    flatpak list --columns=application | ag -vi "$BLOCK_LIST" | tee "$DOTFILES"/modules/flatpak/apps > /dev/null
    
}

sync_dconf() {

    for conf in "$DOTFILES"/modules/gnome/keybinds/*
    do
        
        dconf dump "$(echo /"$(basename $conf)"/ | tr "_" "/")" > "$conf"

    done

    busctl --user call org.gnome.Shell /io/elhan/ExtensionsSync io.elhan.ExtensionsSync save
    
}

is_updated() {

    spinner "Verificando se há alterações na nuvem" -- git fetch --quiet > /dev/null && 
    cmp -s "$DOTFILES"/.git/refs/heads/"$(git symbolic-ref --short HEAD)" "$DOTFILES"/.git/refs/remotes/origin/"$(git symbolic-ref --short HEAD)"

}

pull() {

    if confirm "Existem atualizações. Deseja puxá-las e aplicá-las?" 
    then

        spinner "Iniciando a sincronia..." -- git pull --quiet &&
        success "Sincronização concluída"
        warn "Aplicando atualizações" &&
        bash "$DOTFILES"/init
        
    fi

}

push() {

    local message=${1:-"Atualizando"}

    git commit --quiet -m "$message" 1> /dev/null 2> /dev/null &&
    spinner "Sincronizando alterações locais..." -- git push --quiet

}

ARGS=$(getopt -o "hm:" -l "help,message:" -n "sync" -- "$@") # Adicione aqui o parametro que deseja adicionar ao binário. "<param>:" indica que ele pode ter um valor 

eval set -- "$ARGS"
unset ARGS

while true; 
do
    
    case "$1" in
        -h | --help) 
            shift;
            help 0 
        ;;
        -m | --message)
            MESSAGE=$2
            shift 2;
            continue;
        ;;
        --)
            shift;
            break;
        ;;
    esac

done
    
pwd=$(pwd)

cd "$DOTFILES" || exit

sync_dconf
sync_flatpaks
hostadd --silent

git add . 1>/dev/null 2>/dev/null

is_updated || pull
status --silent || push "$MESSAGE"

spinner "Sincronização concluída" -- sleep 1

cd "$pwd" || exit
